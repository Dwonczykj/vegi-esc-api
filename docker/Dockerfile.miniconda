## this is a DEBIAN image and so we can use /env /opts etc for storing info, but our conda-lock needs to be built for linux-64 platforms...
FROM continuumio/miniconda3:4.9.2 as conda 

## CHOICE v START
## EITHER dont cache conda dependencies and copy whole repo straight away
# COPY . .
## ELSE Cache Conda Dependencies and THEN COPY REST OVER so that cache not invalidates when changing other repository files like app.py
## NOTE use conda create and not conda env create the latter of which is a legacy command
## use conda env create or mamba create when using the mamba docker image
COPY requirements.txt environment.yml predict-environment.yml ./
# RUN conda env create --file environment.yml -n vegi_esc_server
RUN conda env create --file environment.yml -p /env && conda clean -afy
COPY . .
## CHOICE ^ DONE

# below installs any additional dependencies from pip that are needed at runtime from requirements.txt
# RUN conda run -n vegi_esc_server \
#   python -m pip install --no-deps -e .

# CMD [ \
#   "gunicorn", "-k", "uvicorn.workers.UvicornWorker", "app:app" \
#   ]

# on local machine, we are running `python app.py --model ./models/GoogleNews-vectors-negative300.bin  --binary BINARY --path /word2vec --host 0.0.0.0 --port 5002`
# RUN python app.py --model ./models/GoogleNews-vectors-negative300.bin  --binary BINARY --path /word2vec --host 0.0.0.0 --port 5002
CMD [ \
  "/env/bin/gunicorn", "-w", "1", "--bind", "0.0.0.0:5002", "-k", "uvicorn.workers.UvicornWorker", "app:gunicorn_app", "--timeout", "600" \
  ]
# CMD [ \
#   "python", "./app.py", \
#   "--model", "./models/GoogleNews-vectors-negative300.bin", \
#   "--binary", "BINARY", \
#   "--path", "/word2vec", \
#   "--host", "0.0.0.0", \
#   "--port", "5002" \
#   ] # basic example taken from ~ https://www.geeksforgeeks.org/how-to-run-a-python-script-using-docker/